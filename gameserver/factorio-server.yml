---
# factorio-server.yml
- name: Install Factorio Server
  hosts: linode
  become: true
  vars:
    factorio_version: "latest"
    install_dir: "/opt/factorio"

  tasks:
    - name: Create factorio group
      group:
        name: factorio
        state: present

    - name: Create factorio user
      user:
        name: factorio
        group: factorio
        system: yes
        create_home: yes
        shell: /bin/bash
        state: present

    - name: Create systemd service template
      template:
        src: templates/factorio.service.j2
        dest: /etc/systemd/system/factorio.service
        owner: root
        group: root
        mode: '0644'
      vars:
        description: "Factorio Headless Server"
        user: "factorio"
        exec_start: >
          /opt/factorio/bin/x64/factorio 
          --start-server-load-latest 
          --server-settings /home/factorio/backups/server-settings.json

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start Factorio service
      systemd:
        name: factorio
        state: started
        enabled: yes
      become: true

    - name: Install required packages
      apt:
        name:
          - wget
          - xz-utils
        state: present
        update_cache: yes

    - name: Create install directory
      file:
        path: "{{ install_dir }}"
        state: directory
        mode: '0755'

    - name: Download Factorio server
      get_url:
        url: "https://factorio.com/get-download/stable/headless/linux64"
        dest: "/tmp/factorio.tar.xz"
        mode: '0644'

    - name: Check if saves directory exists
      stat:
        path: "{{ install_dir }}/saves"
      register: saves_check

    - name: Temporarily move saves directory
      command: mv "{{ install_dir }}/saves" "/tmp/factorio_saves_backup"
      when: saves_check.stat.exists and saves_check.stat.isdir

    - name: Extract Factorio archive
      unarchive:
        src: "/tmp/factorio.tar.xz"
        dest: "{{ install_dir }}"
        remote_src: yes
        extra_opts:
          - --strip-components=1 # Archive has a nested dir

    - name: Restore saves directory
      command: mv "/tmp/factorio_saves_backup" "{{ install_dir }}/saves"
      when: saves_check.stat.exists and saves_check.stat.isdir

    - name: Ensure saves directory exists
      file:
        path: "{{ install_dir }}/saves"
        state: directory
        mode: '0755'

    - name: Clean up download
      file:
        path: "/tmp/factorio.tar.xz"
        state: absent

    - name: Set permissions
      file:
        path: "{{ install_dir }}"
        state: directory
        recurse: yes
        owner: factorio
        group: factorio
        mode: '0755'
